{"version":3,"file":"my-component.spec.js","sourceRoot":"","sources":["../../../src/components/my-component/my-component.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAE7C,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;IAC5B,EAAE,CAAC,SAAS,EAAE,KAAK,IAAI,EAAE;QACvB,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,WAAW,CAAC;YACjC,UAAU,EAAE,CAAC,WAAW,CAAC;YACzB,IAAI,EAAE,+BAA+B;SACtC,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;KAQxB,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qBAAqB,EAAE,KAAK,IAAI,EAAE;QACnC,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,WAAW,CAAC;YACjC,UAAU,EAAE,CAAC,WAAW,CAAC;YACzB,IAAI,EAAE,qFAAqF;SAC5F,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;KAQxB,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { MyComponent } from './my-component';\n\ndescribe('my-component', () => {\n  it('renders', async () => {\n    const { root } = await newSpecPage({\n      components: [MyComponent],\n      html: '<my-component></my-component>',\n    });\n    expect(root).toEqualHtml(`\n      <my-component>\n        <mock:shadow-root>\n          <div>\n            Hello, World! I'm\n          </div>\n        </mock:shadow-root>\n      </my-component>\n    `);\n  });\n\n  it('renders with values', async () => {\n    const { root } = await newSpecPage({\n      components: [MyComponent],\n      html: `<my-component first=\"Stencil\" last=\"'Don't call me a framework' JS\"></my-component>`,\n    });\n    expect(root).toEqualHtml(`\n      <my-component first=\"Stencil\" last=\"'Don't call me a framework' JS\">\n        <mock:shadow-root>\n          <div>\n            Hello, World! I'm Stencil 'Don't call me a framework' JS\n          </div>\n        </mock:shadow-root>\n      </my-component>\n    `);\n  });\n});\n"]}